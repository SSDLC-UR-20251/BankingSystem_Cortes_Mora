# Detect-secrets
name: CI Pipeline
on: [pull_request]

jobs:
  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install Necessary Packages
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install detect-secrets
        run: |
          pip install detect-secrets

      # 3. Check Existence of .secrets.baseline
      - name: Ensure .secrets.baseline exists
        run: |
          if [ ! -f .secrets.baseline ]; then
            mkdir -p .secrets
            detect-secrets scan > .secrets.baseline
          fi

      # 4. Scan Repository for Secrets
      - name: Scan for secrets
        run: |
          detect-secrets scan > secrets.json
          detect-secrets audit .secrets.baseline || true

      # 5. Upload secrets report
      - name: Upload secrets report
        uses: actions/upload-artifact@v3
        with:
          name: secrets-report
          path: secrets.json

  # An치lisis Est치tico con Semgrep
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value:
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - uses: actions/checkout@v4
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci --error
        env:
          # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep AppSec Platform > Settings
          # and add it to your GitHub secrets.
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  # An치lisis de Calidad de C칩digo con SonarQube
  sonarqube:
    runs-on: ubuntu-latest
    needs: semgrep
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.HUBGIT_TYOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Test Unitarios
  unit-tests:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm test